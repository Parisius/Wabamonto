import { Injectable } from '@angular/core';
import { ActionSheet, App, Config } from 'ionic-angular';
import { ActionSheetButtonsController } from './button/action-sheet-buttons-controller';
/**
 *
 * Drop-in replacement for Ionic's ActionSheetController that supports custom icons in the dialog.
 *
 * @author Gerrit Erpenstein
 * @see https://ionicframework.com/docs/api/components/action-sheet/ActionSheetController/
 */
var ActionSheetCustomIconController = (function () {
    function ActionSheetCustomIconController(_app, _config) {
        this._app = _app;
        this._config = _config;
    }
    /**
     * Create an action sheet instance. Call present() on the instance to show the dialog.
     * @param {ActionSheetCustomIconOptions} options Action sheet options
     * @returns {ActionSheet}
     */
    ActionSheetCustomIconController.prototype.create = function (options) {
        if (options === void 0) { options = {}; }
        var actionSheet = new ActionSheet(this._app, options, this._config), buttonsController = new ActionSheetButtonsController(actionSheet, options.buttons, this._config);
        // Add/set custom icons when the action sheet becomes active
        actionSheet.willEnter.subscribe(function () { return buttonsController.addCustomIcons(); });
        // Remove custom icons when the action sheet is destroyed
        actionSheet.willUnload.subscribe(function () { return buttonsController.removeCustomIcons(); });
        return actionSheet;
    };
    return ActionSheetCustomIconController;
}());
export { ActionSheetCustomIconController };
ActionSheetCustomIconController.decorators = [
    { type: Injectable },
];
/** @nocollapse */
ActionSheetCustomIconController.ctorParameters = function () { return [
    { type: App, },
    { type: Config, },
]; };
//# sourceMappingURL=action-sheet-custom-icon-controller.js.map