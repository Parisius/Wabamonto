import { AfterContentInit, ElementRef, OnChanges, OnDestroy, SimpleChange } from '@angular/core';
import { Config, Tab, Tabs } from 'ionic-angular';
import 'rxjs/add/observable/fromPromise';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/mergeMap';
import { CustomIconBase } from '../custom-icon-base';
/**
 * Directive for adding a custom icon to an ion-tab element. Use the input properties 'customIconSet' and
 * 'customIconName' to set the icon's set and name.
 *
 * Example usage:
 * @usage
 * ```html
 * <ion-tab customIconSet="mySet" customIconName="myIcon" ...></ion-tab>
 * ```
 *
 * @author Gerrit Erpenstein
 */
export declare class TabCustomIcon extends CustomIconBase implements AfterContentInit, OnChanges, OnDestroy {
    private _elementRef;
    private _tab;
    private _tabs;
    /**
     * Icon set name
     */
    iconSet: string;
    /**
     * Icon name
     */
    iconName: string;
    /**
     * Icon element in DOM
     */
    private _iconElement;
    /**
     * Promise resolve function that is called when the icon has been added to the DOM.
     */
    private _iconAddedResolve;
    constructor(_elementRef: ElementRef, _tab: Tab, _tabs: Tabs, config: Config);
    /**
     * (Called after Angular projects external content into its view.)
     */
    ngAfterContentInit(): void;
    /**
     * Add icon element to it's corresponding tab.
     * @private
     */
    private _addIcon();
    /**
     * Called on input parameter value changes.
     */
    ngOnChanges(changes: {
        [key: string]: SimpleChange;
    }): void;
    /**
     * Called on selected tab change.
     * @param selectedTab The newly selected Tab
     * @private
     */
    private _onTabSelected(selectedTab);
    /**
     * Called just before Angular destroys the directive/component.
     */
    ngOnDestroy(): void;
}
